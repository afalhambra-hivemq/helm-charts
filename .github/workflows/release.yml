name: Release Charts
on:
  push:
    branches: [master]
    paths:
      - charts/**
  workflow_dispatch:
jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)

    runs-on: ubuntu-latest
    steps:
      - name: Checkout HiveMQ Helm Charts
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4

      - name: Add dependency chart repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      # the GitHub repository secret `SIGNING_KEY` contains the private key in ASCII-armored format.
      - name: Prepare PGP keys for signing HiveMQ Helm charts
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | gpg --dearmor > $HOME/secring.gpg
          echo "${{ secrets.SIGNING_PASSWORD }}" > $HOME/passphrase

          echo "CR_KEYRING=$HOME/secring.gpg" >> "$GITHUB_ENV"
          echo "CR_PASSPHRASE_FILE=$HOME/passphrase" >> "$GITHUB_ENV"
#        env:
#          PGP_PRIVATE_KEY: "${{ secrets.SIGNING_KEY }}"
#          PGP_PASSPHRASE: "${{ secrets.SIGNING_PASSWORD }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@a917fd15b20e8b64b94d9158ad54cd6345335584 # v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          config: ./.github/chart-releaser.yml

      - name: Cleanup GPG files
        if: always() # ensures cleanup even if the previous step fails
        run: |
          rm -f $HOME/secring.gpg
          rm -f $HOME/passphrase               
